<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>edu.hm.hafner</groupId>
  <artifactId>kara-assignment</artifactId>
  <version>2020-10-01-SNAPSHOT</version>

  <packaging>jar</packaging>

  <name>Java project that tests GreenfootKara programs</name>
  <description>Provides a framework to compile and test GreenfootKara programs.
    It also integrates Maven and several static analysis tools.
  </description>

  <scm>
    <connection>scm:git:git://github.com/uhafner/kara-assignment.git</connection>
    <developerConnection>scm:git:git@github.com:uhafner/kara-assignment.git</developerConnection>
    <url>https://github.com/uhafner/kara-assignment</url>
  </scm>

  <licenses>
    <license>
      <name>MIT license</name>
      <comments>All source code is copyrighted by Ullrich Hafner and licensed under the MIT license.</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Ullrich Hafner</name>
      <id>uhafner</id>
      <email>ullrich.hafner@hm.edu</email>
      <organization>Munich University of Applied Sciences</organization>
      <organizationUrl>https://www.hm.edu/en/index.en.html</organizationUrl>
    </developer>
  </developers>

  <url>http://www.cs.hm.edu/die_fakultaet/ansprechpartner/professoren/hafner/index.de.html</url>

  <properties>
    <source.encoding>UTF-8</source.encoding>
    <project.build.sourceEncoding>${source.encoding}</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <karatest.version>2.0.1</karatest.version>

    <module.name>${project.groupId}.codingstyle</module.name>

    <codingstyle.config.version>1.6.0</codingstyle.config.version>

    <!-- Project Dependencies Configuration -->
    <spotbugs.annotations>4.1.2</spotbugs.annotations>

    <!-- Project Test Dependencies Configuration -->
    <buildhelper.maven.plugin>1.9.1</buildhelper.maven.plugin>
    <junit.version>5.7.0</junit.version>
    <junit-platform-launcher.version>1.7.0</junit-platform-launcher.version>
    <mockito.version>3.5.11</mockito.version>
    <assertj.version>3.17.2</assertj.version>
    <archunit.version>0.14.1</archunit.version>

    <!-- Maven Plug-ins Configuration -->
    <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
    <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
    <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
    <maven-pmd-plugin.version>3.13.0</maven-pmd-plugin.version>
    <pmd.version>6.27.0</pmd.version>
    <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
    <checkstyle.version>8.36.1</checkstyle.version>
    <spotbugs-maven-plugin.version>4.0.4</spotbugs-maven-plugin.version>
    <findsecbugs-plugin.version>1.10.1</findsecbugs-plugin.version>
    <maven-pitest-plugin.version>1.5.2</maven-pitest-plugin.version>
    <pitest-junit5-plugin.version>0.12</pitest-junit5-plugin.version>
    <maven-error-prone-plugin.version>2.8.6</maven-error-prone-plugin.version>
    <error-prone.version>2.4.0</error-prone.version>
    <nullaway.version>0.8.0</nullaway.version>
    <revapi-maven-plugin.version>0.12.1</revapi-maven-plugin.version>
    <revapi-java.version>0.22.0</revapi-java.version>
    <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
    <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <assertj-assertions-generator-maven-plugin.version>2.2.0</assertj-assertions-generator-maven-plugin.version>
    <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
    <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
    <depgraph-maven-plugin.version>3.3.0</depgraph-maven-plugin.version>

    <!-- Maven Surefire ArgLine -->
    <argLine>-Djava.util.logging.config.file=logging.properties</argLine>

  </properties>


  <dependencies>
    <dependency>
      <groupId>edu.hm.hafner</groupId>
      <artifactId>karatest</artifactId>
      <version>${karatest.version}</version>
    </dependency>
    <dependency>
      <groupId>edu.hm.hafner</groupId>
      <artifactId>karatest</artifactId>
      <version>${karatest.version}</version>
      <scope>test</scope>
      <type>test-jar</type>
    </dependency>

    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>${spotbugs.annotations}</version>
    </dependency>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
      <version>${error-prone.version}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit-platform-launcher.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5-api</artifactId>
      <version>${archunit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5-engine</artifactId>
      <version>${archunit.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>junit-platform-engine</artifactId>
          <groupId>org.junit.platform</groupId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

  <build>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${buildhelper.maven.plugin}</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/scenarios</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <testSource>${java.version}</testSource>
          <testTarget>${java.version}</testTarget>
          <compilerArgs>
            <arg>-Xlint:all</arg>
          </compilerArgs>
          <showWarnings>true</showWarnings>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-compiler-javac-errorprone</artifactId>
            <version>${maven-error-prone-plugin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <executions>
          <execution>
            <id>run-pmd</id>
            <goals>
              <goal>pmd</goal>
              <goal>cpd</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <linkXRef>false</linkXRef>
          <failOnViolation>false</failOnViolation>
          <rulesets>
            <ruleset>pmd-configuration.xml</ruleset>
          </rulesets>
          <targetJdk>${java.version}</targetJdk>
          <includeTests>true</includeTests>
          <minimumTokens>50</minimumTokens>
          <excludeRoots>
            <excludeRoot>src/main/java</excludeRoot>
            <excludeRoot>src/test/java</excludeRoot>
            <excludeRoot>target/generated-test-sources/test-annotations</excludeRoot>
            <excludeRoot>target/generated-test-sources/assertj-assertions</excludeRoot>
          </excludeRoots>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${pmd.version}</version>
          </dependency>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>${pmd.version}</version>
          </dependency>
          <dependency>
            <groupId>edu.hm.hafner</groupId>
            <artifactId>codingstyle</artifactId>
            <version>${codingstyle.config.version}</version>
            <classifier>config</classifier>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <executions>
          <execution>
            <id>run-checkstyle</id>
            <goals>
              <goal>checkstyle</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <sourceDirectories>
            <sourceDirectory>${project.build.directory}/scenarios</sourceDirectory>
          </sourceDirectories>
          <excludes>**/Assignment*Test.java</excludes>
          <linkXRef>false</linkXRef>
          <failOnViolation>false</failOnViolation>
          <configLocation>checkstyle-configuration.xml</configLocation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
          <dependency>
            <groupId>edu.hm.hafner</groupId>
            <artifactId>codingstyle</artifactId>
            <version>${codingstyle.config.version}</version>
            <classifier>config</classifier>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <encoding>${source.encoding}</encoding>
              <outputDirectory>${project.build.directory}/scenarios</outputDirectory>
              <resources>
                <resource>
                  <directory>scenarios</directory>
                  <includes>
                    <include>**/Assignment*.java</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>
              <overwrite>true</overwrite>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>run-spotbugs</id>
            <goals>
              <goal>spotbugs</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <failOnError>false</failOnError>
          <xmlOutput>true</xmlOutput>
          <threshold>Low</threshold>
          <effort>Max</effort>
          <relaxed>false</relaxed>
          <fork>true</fork>
          <excludeFilterFile>spotbugs-exclusion-filter.xml</excludeFilterFile>
          <includeTests>true</includeTests>
          <plugins>
            <plugin>
              <groupId>com.h3xstream.findsecbugs</groupId>
              <artifactId>findsecbugs-plugin</artifactId>
              <version>${findsecbugs-plugin.version}</version>
            </plugin>
          </plugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>edu.hm.hafner</groupId>
            <artifactId>codingstyle</artifactId>
            <version>${codingstyle.config.version}</version>
            <classifier>config</classifier>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-engine</artifactId>
            <version>${archunit.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>

  </build>

</project>
